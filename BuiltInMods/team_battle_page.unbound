

(def constant COLUMN_DIVISIONS_WIDTH 40)
(def constant COLUMN_PLAYER_WIDTH 166)
(def constant COLUMN_PLAYER_WIDTH_ONE_TEAM 385)
(def constant COLUMN_SHIP_WIDTH 200)
(def constant COLUMN_SHIP_WIDTH_ONE_TEAM 434)
(def constant COLUMN_FRAGS_WIDTH 46)

(def constant HALF_TABLE_WIDTH "COLUMN_DIVISIONS_WIDTH + COLUMN_PLAYER_WIDTH + COLUMN_SHIP_WIDTH + COLUMN_FRAGS_WIDTH")
(def constant TABLE_WIDTH "COLUMN_DIVISIONS_WIDTH + COLUMN_PLAYER_WIDTH_ONE_TEAM + COLUMN_SHIP_WIDTH_ONE_TEAM + COLUMN_FRAGS_WIDTH")
(def constant LINE_HEIGHT 32)

(def constant C_RED_HEADER 0x77FF2E05)
(def constant C_GREEN_HEADER 0x7700CC7A)
(def constant CT_DIVISION "{ redMultiplier:1, greenMultiplier:0.81, blueMultiplier:0.44 }")

(def constant CAN_DRUM_AMMO "['ap', 'cs', 'he']")

(def css $TableHeaderIconSize ()
	(width = "21px")
	(height = "LINE_HEIGHT")
)

(def css $LineBackgroundStyle ()
	(position = "absolute")
	(height = "LINE_HEIGHT")
	(width = 100%)
)

(def element BG_Black()
	(class $FullsizeAbsolute)
	(style (backgroundColor = "C_DARK") (alpha = "0.15"))
)

(def element TeamBattlePage (_isFogOfWar:bool, _isDynamicDivisionsEnabled:bool, _isBattleLoading:bool, _isBattleStats:bool)
	(scope
		(macro CUSTOM_ELEMENT_VISIBILITY_SCOPE)
		(var isOnlyTeam:bool = "(disabledElements & SC.Battle.CUSTOM_BATTLE_ELEMENTS.TEAM_STRUCTURE_RIGHT) > 0")

		(var spectatorStateEntity:gfx = "$datahub.getSingleEntity(CC.spectatorState)")
		(var isTrainingRoomSpectator:bool = "spectatorStateEntity && spectatorStateEntity.spectatorState.state == SC.Common.SPECTATOR_STATE.TRAINING_SPECTATOR")
		(var battleDataEntity:gfx = "$datahub.getSingleEntity(CC.battleData)")
		(var battleType:str = "battleDataEntity.battleInfo.battleType")

		(var timeStatisticsEventName:str = "_isBattleStats 		? SC.Common.SHIP_INFO_STATISTICS.TEAMS_ON_BATTLE_STATS_WATCHED :
											_isBattleLoading 	? SC.Common.SHIP_INFO_STATISTICS.TEAMS_ON_BATTLE_LOADING_WATCHED
																: ''")
		(var isEmptyStatisticsEvent:bool = "timeStatisticsEventName == ''")
	)

	(bindcall externalCall 'direct.action' "[isEmptyStatisticsEvent ? '' : SC.Common.STATISTICS_EVENTS.LOG_START, [timeStatisticsEventName]]" init=false watch=false on='addedToStage')
	(bindcall externalCall 'direct.action' "[isEmptyStatisticsEvent ? '' : SC.Common.STATISTICS_EVENTS.LOG_END, [timeStatisticsEventName]]" init=false watch=false on='removedFromStage')

	
	(block
		(bind visible "!_isBattleStats")
		(class $FullsizeAbsolute)
		(element BlurBackgroundCommon 'mc_blurmap_medium' false)
	)

	(hblock
		(bind name "_isBattleStats ? 'TeamBattleStatsID' : 'TeamBattleLoading'")

		(hblock
			(class $FullsizeAbsolute)
			(style (hitTest = false) (paddingTop = "LINE_HEIGHT"))
			(block
				(style
					(height = 100%) (backgroundColor = "C_DARK") (alpha = "0.15")
					(bind width "isOnlyTeam ? TABLE_WIDTH : HALF_TABLE_WIDTH")
				)
			)
			(block
				(bind visible "!isOnlyTeam")
				(style (width = "HALF_TABLE_WIDTH") (height = 100%) (backgroundColor = "C_DARK") (alpha = "0.15") (marginLeft = 1px))
			)
		)

		(block
			(controller $Instance renderer='UIlistTeamStructureLeft'
				(args
					_isSpectator = "isTrainingRoomSpectator"
					_battleType = "battleType"
					_isBattleLoading = "_isBattleLoading"
					_isBattleStats = "_isBattleStats"
					_isDynamicDivisionsEnabled = "_isDynamicDivisionsEnabled"
					_isOnlyTeam = "isOnlyTeam"
				)
			)
		)

		
		(block
			(bind visible "!isOnlyTeam")
			(style (width = 1px) (height = 100%))
		)

		(block
			(controller $Instance renderer='UIlistTeamStructureRight'
				(bind enabled "!isOnlyTeam")
				(args
					_isSpectator = "isTrainingRoomSpectator"
					_battleType = "battleType"
					_isBattleLoading = "_isBattleLoading"
					_isBattleStats = "_isBattleStats"
					_isFogOfWar = "_isFogOfWar"
				)
			)
		)
	)
)


(def element UIlistTeamStructureRight (_isSpectator:bool, _isBattleLoading:bool, _isFogOfWar:bool, _isBattleStats:bool, _battleType:str = '')
	(scope
		(var enemiesCollection:gfx = "$datahub.getCollection(CC.avatar).getChildByPath('team.enemy')")
		(var enemies:array = "enemiesCollection.items" (event "enemiesCollection.evUpdated"))
		(var avatarCollection:gfx = "$datahub.getCollection(CC.avatar).getChildByPath('team.enemy.byTeamsSortedAlive.0')")
		(var avatarCollectionArray:array = "avatarCollection.items" (event "avatarCollection.evUpdated"))
	)

	(style (width = "HALF_TABLE_WIDTH"))
	
	(element UIlistTeamStructureHeaderRight _isBattleStats = "_isBattleStats" _enemyPlayerEntityId = "enemies[0].id" _battleType = "_battleType" _isSpectator = "_isSpectator"
		(style (width = 100%) (height = "LINE_HEIGHT") (backgroundColor = "C_RED_HEADER"))
	)

	(block
		(style (right = 0px) (width = 100%))

		(controller $Repeat renderer='SimpleUIListTeamStructureRight'
			(bind count "avatarCollectionArray.length")
			(args
				_avatarEntity = "avatarCollectionArray[$index]"
				_isBattleLoading = "_isBattleLoading"
				_isBattleStats = "_isBattleStats"
				_battleType = "_battleType"
				_isFogOfWar = "_isFogOfWar"
			)
		)
	)
)

(def element UIlistTeamStructureHeaderRight (_battleType:str, _isSpectator:bool, _isBattleStats:bool=false, _enemySquadId:number = 0, _enemyPlayerEntityId:number = 0) 
	(scope
		(var enemyPlayerEntity:gfx = "$datahub.getEntity(_enemyPlayerEntityId)")
		(var enemySquadId:number = "_enemySquadId ? _enemySquadId : enemyPlayerEntity.accountClanSquad.id")
		(var enemySquadIds:str = "enemySquadId == 1 ? 'IDS_CLAN_SQUAD_1' : 'IDS_CLAN_SQUAD_2'")
		(var isClanBattle:bool = "_battleType == SC.Common.BATTLE_TYPES.CLAN_BATTLE")
	)

	(style (width = 100%) (flow = "horizontal"))
	(block
		(bind visible "_isBattleStats")

		(class $TableHeaderIconSize)
		(style (align = "middle|center") (marginLeft = "SXS"))
		(block
			(style (width = 21px) (height = 21px) (backgroundImage = 'swf:../service_kit/battle_results/svg/svg.swf:icon_stat_frag'))
		)
	)
	(block
		(style (width = 100%) (paddingRight = 20) (paddingTop = 10px))
		(tf
			(class $TextDefaultBold17NM)
			(style (width = 100%) (textAlign = "right") (alpha = "TA"))
			(bind text "isClanBattle	? toUpper(tr(enemySquadIds))
										: _isSpectator 	? 'IDS_DIVISION_1' 
														: 'IDS_ENEMY_TEAM'")
		)
	)
)

(def element SimpleUIListTeamStructureRight (_avatarEntity:gfx, _isBattleStats:bool, _isBattleLoading:bool, _isFogOfWar:bool, _battleType:str)
	(scope
		(event evContextMenuShowed)
		(event evContextMenuHidden)
		(event evMenuItemClicked)

		(macro MOUSE_HANDLER_SCOPE)

		(macro AVATAR_DATA_SCOPE "_avatarEntity")
		(macro DIVISION_MEMBER_SCOPE "_avatarEntity")
		(macro PLAYER_CLAN_SCOPE "_avatarEntity")
		(macro PLAYER_VOICE_STATE "pureName")
		(macro SHIP_DATA_SCOPE "shipId")
		(macro PULL_INFO_ABOUT_SHIP_DETECTION "avatarEntityId" "_isFogOfWar")
		(macro SELECTED_AVATAR_ID)
		
		(var isSelected:bool = "id == selectedAvatarId")
		
		(var relation:number = "_avatarEntity.relation.value" (event "_avatarEntity.relation.evChanged"))
		(var isSelf:bool = "relation == SC.Battle.DIPLOMACY_RELATIONS.SELF")

		(var selfPlayerEntity:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
		(var selfDivisionId:number = "selfPlayerEntity.preBattlePlayerSimple.preBattleId" (event "selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged"))
		
		(macro FEATURES "9")
		(var rawKeyTargetValue:gfx = "_avatarEntity.keyTargetMarkerBattle")
		(var isKeyTargetVisible:bool = "rawKeyTargetValue && feature_9 != 'locked'")

		
		(macro PULL_PLAYER_COLOR _isAbuser = "isAbuser")
		(var alphaOfText:number = "isAlive 	? playerNameColor == SC.Ui_styles.SERVICE_COLORS.WHITE 	? TA 
																									: 1
											: TS")
		(var leftClickStatisticsEventName:str = "_isBattleStats 		? SC.Common.SHIP_INFO_STATISTICS.PLAYER_ON_BATTLE_STATS_CLICKED :
												_isBattleLoading 		? SC.Common.SHIP_INFO_STATISTICS.PLAYER_ON_BATTLE_LOADING_CLICKED
																		: ''")
		(var isEmptyStatisticsEvent:bool = "leftClickStatisticsEventName == ''")
	)

	(macro MOUSE_EVENTS_DISPATCHER)

	(bindcall externalCall 'direct.action' "['action.onAvatarSelected', {selectedAvatarId: id}]" init=false watch=false on='leftClick' (bind trigger "isDetectionInfoHidden"))
	(bindcall externalCall 'direct.action' "[isEmptyStatisticsEvent || isSelected ? '' : SC.Common.STATISTICS_EVENTS.LOG, [leftClickStatisticsEventName + ':' + playerEntityDbId]]" init=false watch=false on='leftClick')

	(bind visible "!hidden")

	(style
		(height = "LINE_HEIGHT")
		(width = 100%)
	)

	
	(block
		(class $LineBackgroundStyle)
		(style
			(backgroundColor = "C_DARK")
			(bind alpha "isAlive ? 0 : 0.15")
		)
	)

	
	(block 
		(class $LineBackgroundStyle)
		(style (backgroundColor = "SC.Ui_styles.SERVICE_COLORS.WHITE") (alpha = 0))
		(controller $Animation
			(bindcall play duration=0.02 from={alpha: 0} to={alpha: 0.05} action="killAll" reverse="!rollOver" (bind trigger "rollOver") )
		)

		(controller $Tooltip
			(renderer = 'BattlePlayerTooltip')
			(args
				_playerEntity = "_avatarEntity"
				_isInStats = true
				_isBot = "isBot"
				_isSelected = "isSelected"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(renderer = 'ContextMenuPlayer')
			(bind enabled "!isSelf")
			(args
				_playerEntity =	"_avatarEntity"
				_selfPlayer =	"selfPlayerEntity"
			)
			(macro DEFAULT_MENU_BEHAVIOUR "1")
			(macro TOOLTIP_HIDE_ON_EVENT "evMenuItemClicked")
			(dispatch evContextMenuShowed dir="EventDirection.DOWN" on='evStartShow')
			(dispatch evContextMenuHidden dir="EventDirection.DOWN" on='evHide')
		)
	)

	
	(block
		(bind visible "isSelected")
		(class $LineBackgroundStyle)
		(style
			(hitTest = false)
			(alpha = 0.4)
			(backgroundImage = 'url:../service_kit/frames/one_pixel_frame.png')
			(scale9grid = 2)
		)
	)

	
	(hblock
		(class $Fullsize)
		(style (hitTest = false))
		(block
			(bind name "'player_tab_state_' + name")
			(style
				(width = "COLUMN_FRAGS_WIDTH")
				(height = 100%)
				
			)

			(element LoadingIndicatorAndFrags
				_isBattleLoading =			"_isBattleLoading"
				_isBattleStats =			"_isBattleStats"
				_isReady =					"isReady"
				_fragsCount =				"fragsCount"
				_isSelected =				"isSelected"
				_playerNameColor =			"playerNameColor"
				_isShipHidedByFogOfWar =	"isDetectionInfoHidden"
			)
		)

		
		(block
			(style
				(paddingLeft = "XS")
				(width = "COLUMN_SHIP_WIDTH")
				(height = 100%)
				
			)

			(element ShipIconAndLevelAndName
				_shipIDS =					"shipIDS"
				_shipLevelRome =			"shipLevelRome"
				_shipLevelIcon =			"shipLevelIcon"
				_shipType =					"subType ? toLower(subType): ''"
				_name =						"name"
				_isDead =					"!isAlive"
				_alpha =					"alphaOfText"
				_isShipHidedByFogOfWar =	"isDetectionInfoHidden"
			)
		)

		
		(hblock
			(bind name "'player_tab_name_' + name")

			(style
				(paddingLeft = "XS")
				(paddingRight = "XS")
				(height = 100%)
				(width = "COLUMN_PLAYER_WIDTH")
				(bind alpha "alphaOfText")
				(align = "center|middle")
				
			)

			
			(block
				(style
					(align = "middle")
					(marginLeft = "XS")
					(width = 19px)
					(height = 100%)
				)

				(controller $Instance renderer='KeyTargetIcon'
					(bind enabled "isKeyTargetVisible")
				)
			)
			
			
			(block
				(class $Fullsize)
				(style
					(marginRight = "XS")
					(marginLeft = "S")
					(align = "middle")
				)

				(element PlayerNameAndClanTag
					_isAbuser =		"isAbuser"
					_playerName =	"pureName"
					_clanTag =		"clanTag"
					_isBot =		"isBot"
					_isTextBold =	"isSelected"
				)
			)
		)

		(hblock
			(style
				(width = "COLUMN_DIVISIONS_WIDTH")
				(height = 100%)
				(align = "middle")
				
			)

			
			(block
				(bind visible "division > 0 && !divisionHidden")
				(style
					(width = 19px)
					(height = 19px)
					(marginTop = 2px)
					(marginLeft = 5px)
					(bind backgroundImage "'swf:../service_kit/divisions_icons/svg/svg.swf:division_another_' + DIVISION_LETTERS_ARRAY[divisionSign]")
				)
			)

			
			(element UIListVoiceTextChatIcons
				_playerId = "id"
				_battleType = "_battleType"
				_selfPlayerDivisionId = "selfDivisionId"
				_isSpeaking = "isSpeaking"
				_isVoiceChatMuted = "isMuted"
				_isInVoiceChat = "playerVoiceStateEntity != null"
			)
		)
	)
)



(def element UIlistTeamStructureLeft (_battleType:str, _isBattleStats:bool, _isBattleLoading:bool, _isSpectator:bool = false, _isDynamicDivisionsEnabled:bool = false, _isOnlyTeam:bool = false)
	(scope
		(var avatarCollection:gfx = "$datahub.getCollection(CC.avatar).getChildByPath('team.ally.sortedAlive')")
		(var avatarCollectionArray:array = " avatarCollection.items ?: []" (event "avatarCollection.evUpdated"))

		(var challengeParticipantCollection:gfx = "$datahub.getCollection(CC.challengeParticipant).getChildByPath('sortedByWonPosition')")
		(var challengeParticipantCollectionArray:array = " challengeParticipantCollection.items ?: []" (event "challengeParticipantCollection.evUpdated"))
		(var challengeEntity:gfx = "$datahub.getSingleEntity(CC.challenge)")
		(var isChallenge:bool = "challengeEntity != null")
	)

	(style
		(bind width "_isOnlyTeam ? TABLE_WIDTH : HALF_TABLE_WIDTH")
	)

	(element UIlistTeamStructureHeaderLeft
		_isBattleStats="_isBattleStats"
		_battleType = "_battleType"
		_isSpectator = "_isSpectator"
		_isChallenge = "isChallenge"

		(style (width = 100%) (height = "LINE_HEIGHT") (backgroundColor = "C_GREEN_HEADER"))
	)

	(block
		(style (width = 100%))
		(controller $Repeat renderer='SimpleUIListTeamStructureLeft'
			(bind count "isChallenge ? challengeParticipantCollectionArray.length : avatarCollectionArray.length")
			(args
				_avatarEntity = "isChallenge ? challengeParticipantCollectionArray[$index] : avatarCollectionArray[$index]"
				_isBattleLoading = "_isBattleLoading"
				_isBattleStats = "_isBattleStats"
				_battleType = "_battleType"
				_isDynamicDivisionsEnabled = "_isDynamicDivisionsEnabled"
				_isOnlyTeam = "_isOnlyTeam"
				_isChallenge = "isChallenge"
			)
		)
	)
)

(def element UIlistTeamStructureHeaderLeft (_battleType:str, _isSpectator:bool, _isBattleStats:bool=false, _allySquadId:number=0, _isChallenge:bool=false)
	(scope
		(var playerEntity:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
		(var allySquadId:gfx = "_allySquadId ? _allySquadId : playerEntity.accountClanSquad.id")
		(var allySquadIds:str = "allySquadId == 1 ? 'IDS_CLAN_SQUAD_1' : 'IDS_CLAN_SQUAD_2'")
		(var isClanBattle:bool = "_battleType == SC.Common.BATTLE_TYPES.CLAN_BATTLE")
	)

	(style (width = 100%) (flow = "horizontal"))
	(block
		(style (width = 100%) (marginLeft = "MS") (marginTop = 10px) (alpha = "TA"))
		(tf
			(class $TextDefaultBold17NM)
			(bind text "_isChallenge 	? 'IDS_PARTICIPANTS' :
						isClanBattle 	? toUpper(tr(allySquadIds)) :
						_isSpectator	? 'IDS_DIVISION_0'
										: 'IDS_ALLY_TEAM'")
		)
	)
	(block
		(bind visible "_isBattleStats && !_isChallenge")
		(class $TableHeaderIconSize)
		(style (position = "absolute") (right = "SXS") (align = "middle|center"))
		(block
			(style (width = 21px) (height = 21px) (backgroundImage = 'swf:../service_kit/battle_results/svg/svg.swf:icon_stat_frag'))
		)
	)
)

(def element SimpleUIListTeamStructureLeft (_avatarEntity:gfx, _isBattleLoading:bool, _isBattleStats:bool, _isDynamicDivisionsEnabled:bool, _isOnlyTeam:bool, _battleType:str)
	(scope
		(event evRevokeInvitationToDivision)

		(event evContextMenuShowed)
		(event evContextMenuHidden)
		(event evMenuItemClicked)

		(macro MOUSE_HANDLER_SCOPE)

		(macro AVATAR_DATA_SCOPE "_avatarEntity")
		(macro DIVISION_MEMBER_SCOPE "_avatarEntity")
		(macro PLAYER_CLAN_SCOPE "_avatarEntity")
		(macro PLAYER_VOICE_STATE "pureName")
		(macro SHIP_DATA_SCOPE "shipId")
		(macro SELECTED_AVATAR_ID)
		
		(var isSelected:bool = "id == selectedAvatarId")
		
		(var relation:number = "_avatarEntity.relation.value" (event "_avatarEntity.relation.evChanged"))
		(var isSelf:bool = "relation == SC.Battle.DIPLOMACY_RELATIONS.SELF")

		(var selfPlayerEntity:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
		(var divisionId:number = "	selfPlayerEntity.divisionMember.divisionId" (event "selfPlayerEntity.divisionMember.evDivisionChanged"))
		
		(var preBattlePlayerSimpleCollection:gfx = "$datahub.getCollection(CC.preBattlePlayerSimple)")
		(var preBattlePlayerSimpleEntity:gfx = "$datahub.getPrimaryEntity(CC.preBattlePlayerSimple, id)" (event "preBattlePlayerSimpleCollection.evAdded"))
		(var isInvited:bool = "preBattlePlayerSimpleEntity.hasComponent(CC.playerInvitedToPrebattleInfo)" (event "preBattlePlayerSimpleEntity.evAdded") (event "preBattlePlayerSimpleEntity.evRemoved"))

		(macro FEATURES "9")
		(var rawKeyTargetValue:gfx = "_avatarEntity.keyTargetMarkerBattle")
		(var isKeyTargetVisible:bool = "rawKeyTargetValue && feature_9 != 'locked'")

		(var challengeParticipant:gfx= "_avatarEntity.challengeParticipant" (event "_avatarEntity.evAdded"))
		(var isChallengeParticipant:bool= "challengeParticipant != null")
		(var wonPosition:number= "challengeParticipant.wonPosition ?: 0" (event "challengeParticipant.evWonPositionChanged"))

		
		(macro PULL_PLAYER_COLOR
			_isSelf = "isSelf"
			_isAbuser = "isAbuser"
			_isInSameDivision = "isInSameDivision"
		)
		(var playerShipColor:number = "!isSelf && isInSameDivision	? SC.Ui_styles.SERVICE_COLORS.YELLOW
																	: SC.Ui_styles.SERVICE_COLORS.WHITE")
		(var alphaOfText:number = "isAlive 	? playerNameColor == SC.Ui_styles.SERVICE_COLORS.WHITE 	? TA 
																									: 1
											: TS")

		(var leftClickStatisticsEventName:str = "_isBattleStats 		? SC.Common.SHIP_INFO_STATISTICS.PLAYER_ON_BATTLE_STATS_CLICKED :
												_isBattleLoading 		? SC.Common.SHIP_INFO_STATISTICS.PLAYER_ON_BATTLE_LOADING_CLICKED
																		: ''")
		(var isEmptyStatisticsEvent:bool = "leftClickStatisticsEventName == ''")
	)

	(macro MOUSE_EVENTS_DISPATCHER)

	(bindcall externalCall 'direct.action' "['action.onAvatarSelected', {selectedAvatarId: id}]" init=false watch=false on='leftClick')
	(bindcall externalCall 'direct.action' "[isEmptyStatisticsEvent || isSelected ? '' : SC.Common.STATISTICS_EVENTS.LOG, [leftClickStatisticsEventName + ':' + playerEntityDbId]]" init=false watch=false on='leftClick')

	(bind visible "!hidden")
	(style (height = "LINE_HEIGHT") (width = 100%))

	
	(block 
		(class $LineBackgroundStyle)
		(style
			(bind backgroundColor "isSelf ? SC.Ui_styles.SERVICE_COLORS.WHITE: C_DARK")
			(bind alpha "isSelf 	? 0.15 :
						!isAlive 	? 0.15
									: 0")
		)
	)

	
	(block 
		(class $LineBackgroundStyle)
		(style (backgroundColor = "SC.Ui_styles.SERVICE_COLORS.WHITE") (alpha = 0))
		(controller $Animation
			(bindcall play duration=0.02 from={alpha: 0} to={alpha: 0.05} action="killAll" reverse="!rollOver" (bind trigger "rollOver") )
		)

		(controller $Tooltip
			(renderer = 'BattlePlayerTooltip')
			(args
				_playerEntity = "_avatarEntity"
				_isInStats = true
				_isBot = "isBot"
				_isSelected = "isSelected"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(renderer = 'ContextMenuPlayer')
			(bind enabled "!isSelf")
			(args
				_playerEntity =	"_avatarEntity"
				_selfPlayer =	"selfPlayerEntity"
			)
			(macro DEFAULT_MENU_BEHAVIOUR "1")
			(macro TOOLTIP_HIDE_ON_EVENT "evMenuItemClicked")
			(dispatch evContextMenuShowed dir="EventDirection.DOWN" on='evStartShow')
			(dispatch evContextMenuHidden dir="EventDirection.DOWN" on='evHide')
		)
	)

	
	(block
		(bind visible "isSelected")
		(class $LineBackgroundStyle)
		(style
			(hitTest = false)
			(alpha = 0.4)
			(backgroundImage = 'url:../service_kit/frames/one_pixel_frame.png')
			(scale9grid = 2)
		)
	)

	(hblock
		(class $Fullsize)
		(style (hitTest = false))

		
		(hblock
			(style
				(width = "COLUMN_DIVISIONS_WIDTH")
				(height = 100%)
				(align = "middle")
				
			)

			(element UIListVoiceTextChatIcons
				_playerId = "id"
				_selfPlayerDivisionId = "divisionId"
				_isInSameDivision = "isInSameDivision"
				_battleType = "_battleType"
				_isSpeaking = "isSpeaking"
				_isVoiceChatMuted = "isMuted"
				_isInVoiceChat = "playerVoiceStateEntity != null"
			)

			
			(block
				(bind visible "division > 0 && !divisionHidden")

				(style
					(width = 19px)
					(height = 19px)
					(marginTop = 2px)
					(bind backgroundImage "	isDivisionCommander && isInSameDivision ? 'swf:../service_kit/divisions_icons/svg/svg.swf:division_your_commander' :
											isInSameDivision 						? 'swf:../service_kit/divisions_icons/svg/svg.swf:division_your_' + DIVISION_LETTERS_ARRAY[divisionSign]
																					: 'swf:../service_kit/divisions_icons/svg/svg.swf:division_another_' + DIVISION_LETTERS_ARRAY[divisionSign]")
				)
			)

			

			(block
				(bind visible "division == 0 && !isSelf && _isDynamicDivisionsEnabled && isInvited")
				(style
					(width = 19px)
					(height = 19px)
					(marginTop = 2px)
					(backgroundImage = 'swf:../service_kit/divisions_icons/svg/svg.swf:division_invited')
				)
			)
		)

		
		(hblock
			(bind name "'player_tab_name_' + name")

			(style
				(paddingLeft = "XS")
				(paddingRight = "XS")
				(height = 100%)
				(bind width "_isOnlyTeam ? COLUMN_PLAYER_WIDTH_ONE_TEAM : COLUMN_PLAYER_WIDTH")
				(bind alpha "alphaOfText")
				(align = "center|middle")
				
			)
			
			

			(element PlayerNameAndClanTag
				_isSelf =			"isSelf"
				_isAbuser =			"isAlive ? isAbuser : false"
				_isInSameDivision =	"isInSameDivision"
				_playerName =		"pureName"
				_clanTag =			"clanTag"
				_isBot =			"isBot"
				_isTextBold =		"isSelf || isSelected"
			)
		)


		
		(hblock
			(style
				(paddingLeft = "XS")
				(bind width "_isOnlyTeam ? COLUMN_SHIP_WIDTH_ONE_TEAM : COLUMN_SHIP_WIDTH")
				(height = 100%)
				
			)

			
			(block
				(style
					(align = "middle")
					(height = 100%)
					(marginRight = "XS")
				)

				(controller $Instance renderer='KeyTargetIcon'
					(bind enabled "isKeyTargetVisible")
				)
			)

			(element ShipIconAndLevelAndName
				_shipIDS =			"shipIDS"
				_shipLevelRome =	"shipLevelRome"
				_shipLevelIcon =	"shipLevelIcon"
				_shipType =			"subType ? toLower(subType): ''"
				_name =				"name"
				_isSelf =			"isSelf"
				_isDead =			"!isAlive"
				_isInSameDivision =	"isInSameDivision"
				_alpha =			"alphaOfText"
				_playerShipColor =	"playerShipColor"
			)
		)

		
		(block
			(bind name "'player_tab_state_' + name")
			(style
				(width = "COLUMN_FRAGS_WIDTH")
				(height = 100%)
				
			)

			(class $Fullsize)
			(controller $Instance renderer='LoadingIndicatorAndFrags'
				(bind enabled "!isChallengeParticipant")
				(args
					_isBattleLoading =	"_isBattleLoading"
					_isBattleStats =	"_isBattleStats"
					_isReady =			"isReady"
					_fragsCount =		"fragsCount"
					_isSelected =		"isSelected"
					_playerShipColor =	"playerShipColor"
					_isSelf =			"isSelf"
				)
			)
			(controller $Instance renderer='WonPosition'
				(bind enabled "isChallengeParticipant")
				(args _wonPosition = "wonPosition")
			)
		)
	)
)


(def element KeyTargetIcon ()
	(style
		(width = 19px)
		(height = 19px)
		(backgroundImage = 'swf:../service_kit/markers/svg/svg.swf:key_target')
	)
)

(def element WonPosition (_wonPosition:number)
	(style (height = 100%) (align = "middle|center"))
	(block
		(style
			(width = 19px)
			(height = 19px)
			(bind backgroundImage "'swf:../service_kit/markers/won_position/won_position.swf:place' + _wonPosition")
		)
	)
)

(def element LoadingIndicatorAndFrags (	_isBattleLoading:bool, _isBattleStats:bool, _isReady:bool, _fragsCount:number, _isSelected:bool,
										_playerShipColor:number="SC.Ui_styles.SERVICE_COLORS.WHITE", _isSelf:bool=false, _isShipHidedByFogOfWar:bool = false)
	(class $Fullsize)
	(style (align = "middle|center"))
	(block
		(bind visible "_isBattleLoading")
		(style
			(width = 10px) (height = 10px) (align = "middle|center")
			(bind backgroundImage "'swf:../service_kit/markers/svg/svg.swf:' + (_isReady ? 'online' : 'offline')")
		)
	)
	(block
		(bind visible "_isBattleStats && _fragsCount != 0 && !_isShipHidedByFogOfWar")
		(style (width = 100%))
		(tf
			(bind class "_isSelected || _isSelf ? '$TextDefaultBoldNM' : '$TextDefaultNM'")
			(style
				(textAlign = "center") (width = 100%) (marginText = 0) (wordWrap = false)
				(bind textColor "_playerShipColor") (alpha = "TA")
			)
			(bind text "_fragsCount")
		)
	)
)

(def element ShipIconAndLevelAndName (_shipIDS:str, _shipLevelRome:str, _shipLevelIcon:str, _shipType:str, _name:str, _isDead:bool=false, _alpha:number="TA",
									_playerShipColor:number="SC.Ui_styles.SERVICE_COLORS.WHITE", _isSelf:bool=false, _isInSameDivision:bool=false, _isShipHidedByFogOfWar:bool=false)
	(scope 
		(var markerColorName:str = "_isDead							? '_sunk' :
									_isInSameDivision && !_isSelf	? '_division'
																	: ''")
		(var iconName:str = "_shipType + markerColorName")
	)
	
	(class $Fullsize)
	(style (flow = "horizontal") (align = "middle"))

	
	(block
		(bind visible "!_isShipHidedByFogOfWar")
		(bind name "'ship_icon_' + _name")
		(style
			(bind backgroundImage "'swf:../service_kit/ship_classes/svg/svg.swf:icon_default_' + iconName")
			(width = "SHIP_ICON_SIZE.WIDTH")
			(height = "SHIP_ICON_SIZE.HEIGHT")
		)
	)

	
	(hblock
		(bind visible "!_isShipHidedByFogOfWar")
		(class $Fullsize)
		(style (marginRight = "XS") (align = "middle"))

		(block
			(bind visible "!_shipLevelIcon.length")
			(style
				(marginLeft = "XS")
				(bind alpha  "_alpha")
			)
			(tf
				(class $TextDefaultBoldNM)
				(style (bind textColor "_playerShipColor"))
				(bind text "_shipLevelRome + ' '")
			)
		)

		(block
			(bind visible "_shipLevelIcon.length > 0")
			(style (bind alpha "_alpha") (marginBottom = 1px))
			(element LevelIconNM
				_colorTransform = "_isInSameDivision && !_isSelf ? CT_DIVISION : CT_NONE"
			)
		)

		(tf
			(bind name "'player_tab_ship_' + _name")

			(class $TextDefaultBoldNM)
			(style
				(width = 100%) (textAlign = "left") (wordWrap = false) (letterSpacing = 0) (marginTextLeft = 1) (elideMode = true)
				(bind alpha "_alpha")
				(bind textColor "_playerShipColor")
			)
			(bind text "toUpper(tr(_shipIDS))")
		)
	)

	
	(block
		(bind visible "_isShipHidedByFogOfWar")
		(class $Fullsize)
		(style (marginLeft = "XS") (marginRight = "XS") (align = "middle") (alpha = "TS"))
		(tf
			(bind name "'player_tab_ship_' + _name")
			(class $TextDefaultNM)
			(style (width = 100%) (textAlign = "left") (wordWrap = false) (letterSpacing = 0) (marginTextLeft = 1))
			(text = 'IDS_FOG_OF_WAR_FOR_NOTDETECTED_SHIP')
		)
	)
)

(def element UIListVoiceTextChatIcons (_playerId:number = 0, _selfPlayerDivisionId:number = 0, _isSpeaking:bool = false, _isVoiceChatMuted:bool = false, _isInVoiceChat:bool = false, _battleType:str = '', _isInSameDivision:bool = false)
	(scope
		(var playerEntity:gfx = "$datahub.getPrimaryEntity(CC.avatar, _playerId)")
		(var pureName:str = "				playerEntity.avatar.pureName")
		(var isPlayerMessagesMuted:bool = "	playerEntity.avatar.mute" (event "playerEntity.avatar.evMuteChanged"))
		(var relation:number = "			playerEntity.relation.value" (event "playerEntity.relation.evChanged"))
		(var isIgnored:bool = "				playerEntity.contact.isIgnored" (event "playerEntity.contact.evIsIgnoredChanged"))
		(var isSelf:bool = "relation == 0")

		(macro GET_PREF 'voiceChatEnabled' "'sound.voice.chat.enabled'")
		(var isClanBattle:bool = "_battleType == SC.Common.BATTLE_TYPES.CLAN_BATTLE")
		(var isPveOrCoopOrRandomBattle:bool = "_battleType in [SC.Common.BATTLE_TYPES.PVE_BATTLE, SC.Common.BATTLE_TYPES.COOPERATIVE_BATTLE, SC.Common.BATTLE_TYPES.RANDOM_BATTLE]")

		(var playerCanBeInChat:bool = "voiceChatEnabled && (isClanBattle || isPveOrCoopOrRandomBattle && _isInSameDivision)")
		(var selfCanBeInChat:bool = "isSelf && (isClanBattle || isPveOrCoopOrRandomBattle && _selfPlayerDivisionId)")
		(var canBeInChat:bool = "playerCanBeInChat || selfCanBeInChat")
		(var state:str = "	!_isInVoiceChat		? 'disabled' :
							_isVoiceChatMuted	? 'muted' :
							_isSpeaking			? 'speak'
												: ''")
		(var isVoiceAndTextTriggered:bool = "canBeInChat && (isPlayerMessagesMuted || isIgnored) && (_isSpeaking || _isVoiceChatMuted || !_isInVoiceChat)")
		(var isTextChatIconVisible:bool = "isPlayerMessagesMuted || isIgnored")
	)

	(bind name "isPlayerMessagesMuted ? 'mute_' + pureName : 'not_mute_' + pureName")

	(style
		(height = 100%)
		(width = 19px)
	)

	(block
		(bind visible "canBeInChat")
		(style
			(position = "absolute")
		)
		(controller $Animation
			(bindcall play duration=0.15 from={top: 7} to={top: 1} easing="Easing.quad_out" action="killAll" reverse="!isVoiceAndTextTriggered" init=true (bind trigger "isVoiceAndTextTriggered"))
		)

		(block
			(style
				(width = 19px)
				(height = 19px)
				(alpha = "state != '' ? 1 : 0")
				(bind backgroundImage "'swf:../service_kit/chat_channels/chat_svg/chat_svg.swf:voice_chat_' + state")
			)
			(controller $Animation
				(bindcall play duration=0.1 from ={alpha: 0} to ={alpha: 1} easing="Easing.quad_out" action="killAll" reverse="!state" (bind trigger "state"))
			)
		)
	)

	(block
		(style
			(position = "absolute")
			(left = 1px)
		)

		(controller $Animation
			(bindcall play duration=0.15 from={top: 7} to={top: 13} easing="Easing.quad_out" action="killAll" reverse="!isVoiceAndTextTriggered" init=true (bind trigger "isVoiceAndTextTriggered"))
		)

		(block
			(style
				(width = 19px)
				(height = 19px)
				(backgroundImage = "'swf:../service_kit/chat_channels/chat_svg/chat_svg.swf:text_chat_muted'")
				(alpha = "isTextChatIconVisible ? 1 : 0")
			)
			(controller $Animation
				(bindcall play duration=0.1 from={alpha: 0} to={alpha: 1} easing="Easing.quad_out" action="killAll" reverse="!isTextChatIconVisible" (bind trigger "isTextChatIconVisible"))
			)
		)
	)
)


(def element ShipInfoOnTeamBattlePage (_isBattleStats:bool)
	(scope
		(macro SELECTED_AVATAR_ID)
		(var selectedAvatarEntity:gfx = "$datahub.getPrimaryEntity(CC.avatar, selectedAvatarId)")
		(macro AVATAR_DATA_SCOPE "selectedAvatarEntity")
		(macro PLAYER_CLAN_SCOPE "selectedAvatarEntity")
		(macro SHIP_DATA_SCOPE "shipId")
		(var relation:number = "selectedAvatarEntity.relation.value" (event "selectedAvatarEntity.relation.evChanged"))
		(var isEnemy:bool = "relation == SC.Battle.PLAYER_RELATION.ENEMY")

		(var battleDataEntity:gfx = "$datahub.getSingleEntity(CC.battleData)")
		(var isViewShipInfoDisabled:bool = "battleDataEntity.battleInfo.isViewShipInfoDisabled ?: false")
		(var isViewEnemyShipInfoDisabled:bool = "isViewShipInfoDisabled && isEnemy")
		(var isFogOfWar:bool = "battleDataEntity.battleInfo.isFogOfWar ?: false")
		(macro PULL_INFO_ABOUT_SHIP_DETECTION "avatarEntityId" "isFogOfWar")
		(macro IS_SPECTATOR_MODE)

		(var isWeaponContainerVisible:bool = "!(isDetectionInfoHidden || isViewEnemyShipInfoDisabled) || isSpectatorTrainingMode")
		(var reasonOfEmptyContainer:str = "	isDetectionInfoHidden && isViewEnemyShipInfoDisabled 	? 'IDS_FOG_OF_WAR_AND_VIEW_SHIP_INFO_DISABLED' :
											isViewEnemyShipInfoDisabled								? 'IDS_VIEW_SHIP_INFO_DISABLED' :
											isDetectionInfoHidden									? 'IDS_FOG_OF_WAR_TIPS'
																									: ''")

		(var isAircarrier:bool = "subType == ShipTypes.AIRCARRIER")

		(macro FEATURES "9")

		(var shipTTX:gfx = "selectedShipInfoEntity.selectedShipInfo.shipTTX" (event "selectedShipInfoEntity.selectedShipInfo.evChanged"))
		(var hasAtbaArtillery:bool = "toBool(shipTTX.artillery.atba)")
		(var hasAirDefense:bool = "toBool(shipTTX.airDefense.averageAura.maxDist)")
	)

	(name = 'tooltip_ship_info')

	(bind visible "selectedAvatarId > 0")

	
	(block
		(bind visible "!_isBattleStats")
		(class $FullsizeAbsolute)
		(element BlurBackgroundCommon 'mc_blurmap_medium' false)
	)
	
	(style
		(flow = "horizontal")
		(height = 185px)
	)

	
	(block
		(style
			(width = "HALF_TABLE_WIDTH")
			(height = 100%)
		)
		(hblock
			(style
				(width = 100%)
				(align = "middle")
			)

			(element BG_Black)

			(block
				(style
					(height = 100%)
					(width = 6px)
					(bind backgroundColor "isEnemy ? C_RED_HEADER : C_GREEN_HEADER")
				)
			)

			(element PlayerDogTagContainer
				_playerId =		"playerEntityDbId"
				_size =			"DOG_TAG_SIZE.SMALL"
				(style
					(marginLeft = 6px)
					(marginTop = 6px)
					(marginRight = 12px)
					(marginBottom = 6px)
				)
			)

			(block
				(style (width = 100%))

				(element PlayerNameAndClanTag
					_playerName =	"pureName"
					_clanTag =		"clanTag"
					_isBot =		"isBot"
					_isTextBold =	true
					_fontSize =		17
					(style (alpha = "TA"))
				)

				(hblock
					(bind visible "!isDetectionInfoHidden")
					(style (width = 100%) (marginTop = "S") (align = "middle"))

					(element NationFlagsTiny
						_shipCountry =	"flagName"
					)

					(block
						(class $Fullsize)
						(style (marginLeft = "XXS"))
						(element ShipIconAndLevelAndName
							_shipIDS = 			"shipIDS"
							_shipLevelRome = 	"shipLevelRome"
							_shipLevelIcon =	"shipLevelIcon"
							_shipType = 		"subType ? toLower(subType): ''"
							_name = 			"name"
						)
					)
				)
			)
		)
	
		(element TableDivider)
	
		(block
			(class $Fullsize)

			(element BG_Black)

			(block
				(bind visible "isDetectionInfoHidden || isViewEnemyShipInfoDisabled")
				(style
					(width = 100%)
					(paddingTop = "SXS")
					(paddingLeft = "M")
					(paddingRight = "M")
					(alpha = "TS")
				)
				(tf
					(name = 'lbl_reason_of_empty_container')
					(class $TextDefaultNM)
					(style (width = 100%))
					(bind text "reasonOfEmptyContainer")
				)
			)

			(block
				(bind visible "!isDetectionInfoHidden && !isViewEnemyShipInfoDisabled")
				(style
					(width = 100%)
					(paddingLeft = "M")
					(paddingRight = "M")
					(paddingTop = "XS")
				)

				(block
					(bind visible "hasAtbaArtillery")
					(style (width = 100%))
					(controller $Tooltip
						(bind enabled "hasAtbaArtillery")
						(renderer='ShipInfoParamAtbaTooltip')
						(args _atbaArray= "shipTTX.artillery.atba")
						(macro DEFAULT_TOOLTIP_BEHAVIOUR)
					)
					(controller $Instance renderer='ShipParameter_Number'
						(bind enabled "hasAtbaArtillery")
						(args
							_title = 'IDS_SHIP_PARAM_ATBA_GUN'
							_value = "shipTTX.artillery.atbaMaxDist"
							_valueConfig = "VALUE_CONFIG.KILOMETER"
						)
					)
				)

				(block
					(bind visible "hasAirDefense")
					(style (width = 100%))
					(controller $Tooltip
						(bind enabled "hasAirDefense")
						(renderer='ShipInfoParamAirDefenseTooltip')
						(args _airDefenseTTX = "shipTTX.airDefense")
						(macro DEFAULT_TOOLTIP_BEHAVIOUR)
					)
					(controller $Instance renderer='ShipParameter_Number'
						(bind enabled "hasAirDefense")
						(args
							_title = 'IDS_SHIP_PARAM_AIR_DEFENSE'
							_value = "shipTTX.airDefense.averageAura.maxDist"
							_valueConfig = "VALUE_CONFIG.KILOMETER"
						)
					)
				)

				(block
					(style (width = 100%))
					(controller $Tooltip
						(renderer='ShipInfoParamVisibilityTooltip')
						(args _visibilityTTX = "shipTTX.visibility")
						(macro DEFAULT_TOOLTIP_BEHAVIOUR)
					)
					(element ShipParameter_Number
						_title = 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP'
						_value = "shipTTX.visibility.visibilityByShip.normal"
						_valueConfig = "VALUE_CONFIG.KILOMETER_NEGATIVE"
					)
				)
			)
		)
	)

	
	(block (style (width = 1px) (height = 100%)))

	
	(block
		(style (width = "HALF_TABLE_WIDTH") (height = 100%))

		
		(block
			(bind visible "isWeaponContainerVisible")
			(name = 'lbl_visible_ship_info')
			(class $Fullsize)

			(block
				(style (width = 100%) (height = 100%))

				(controller $Instance
					(bind enabled "isWeaponContainerVisible")
					(bind renderer "isAircarrier	? 'ShipEquipmentOnTeamBattlePageAirCarrier'
													: 'ShipEquipmentOnTeamBattlePageDefault'")
					(args
						_selectedAvatarId = "selectedAvatarId"
					)
				)
			)
		)

		
		(block
			(bind visible "!isWeaponContainerVisible")
			(class $Fullsize)

			
			(element BG_Black)

			(block
				(class $FullsizeAbsolute)
				(style (backgroundImage = 'url:../bg/shipinfo_bg_ship_undetected.png'))
			)
		)
	)
)

(def element ShipInfoParamAtbaTooltip (_atbaArray:array)
	(macro TTX_TOOLTIP_STYLE)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText='IDS_SHIP_PARAM_ATBA_GUN')
		(block
			(style (width = 100%))
			(controller $Repeat
				(renderer = 'ShipInfoAtbaTTX')
				(bind count "_atbaArray.length")
				(args _atbaGunTTX = "_atbaArray[$index]")
			)
		)
	)
)

(def element ShipInfoAtbaTTX (_atbaGunTTX:gfx)
	(scope
		(var ammoTTX:gfx = "_atbaGunTTX.ammoHE	? _atbaGunTTX.ammoHE :
							_atbaGunTTX.ammoCS	? _atbaGunTTX.ammoCS :
							_atbaGunTTX.ammoAP	? _atbaGunTTX.ammoAP
												: null")
		(var title:str = 	"_atbaGunTTX.ammoHE	? 'IDS_SHIP_PARAM_AMMO_HE_FULL_NAME' :
							_atbaGunTTX.ammoCS	? 'IDS_SHIP_PARAM_AMMO_CS_FULL_NAME' :
							_atbaGunTTX.ammoAP	? 'IDS_SHIP_PARAM_AMMO_AP_FULL_NAME'
												: ''")
	)
	(style (width = 100%))

	(macro TTX_AMMO_ROW "title" "ammoTTX")
	(element TOOLTIP_SYSTEM_PARAMS_WRAPPER
		(element TOOLTIP_SYSTEM_PARAMS_BLOCK
			(element ShipParameter_Number
				_title = 'IDS_SHIP_PARAM_ARTILLERY_MAX_DAMAGE'
				_value = "ammoTTX.damage"
			)
			(block
				(style (width = 100%))
				(controller $Instance
					(bind enabled "_atbaGunTTX.ammoHE != null")
					(renderer = 'ShipParameter_Percent')
					(args
						_title = 'IDS_SHIP_PARAM_ARTILLERY_BURN_PROB'
						_value = "ammoTTX.burnChance"
						_valueConfig = "VALUE_CONFIG.PERCENT_FLOAT"
						_zeroValueHidden = true
					)
				)
			)
			(block
				(style (width = 100%))
				(controller $Instance
					(bind enabled "_atbaGunTTX.ammoHE == null")
					(renderer = 'ShipParameter_Number')
					(args
						_title = 'IDS_SHIP_PARAM_ARTILLERY_ALPHA_PIERCING'
						_value = "ammoTTX.piercing"
						_valueConfig = "VALUE_CONFIG.MILLIMETER"
						_zeroValueHidden = true
					)
				)
			)
		)
	)
)

(def element ShipInfoParamAirDefenseTooltip (_airDefenseTTX:gfx)
	(scope
		(var airDefenseAuras:array = "_airDefenseTTX.auras")
	)
	(macro TTX_TOOLTIP_STYLE)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText='IDS_SHIP_PARAM_AIR_DEFENSE')
		(element TooltipSystemHorizontalDivider)
		(element TOOLTIP_SYSTEM_PARAMS_WRAPPER
			(element TOOLTIP_SYSTEM_PARAMS_BLOCK
				(block
					(style (width = 100%))
					(controller $Repeat
						(renderer = 'ShipInfoArDefenseTTX')
						(bind count "airDefenseAuras.length")
						(args _airDefenseAura = "airDefenseAuras[$index]")
					)
				)
			)
		)
	)
)

(def element ShipInfoArDefenseTTX (_airDefenseAura:dict)
	(style (width = 100%))
	(element ShipParameter_Number
		_title = "'IDS_SHIP_PARAM_AA_AVERAGE_DAMAGE_' + toUpper(_airDefenseAura.type)"
		_value = "_airDefenseAura.damage"
	)
)

(def element ShipInfoParamVisibilityTooltip (_visibilityTTX:gfx)
	(macro TTX_TOOLTIP_STYLE)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText='IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP')
		(element TooltipSystemHorizontalDivider)
		(element TOOLTIP_SYSTEM_PARAMS_WRAPPER
			(element TOOLTIP_SYSTEM_PARAMS_BLOCK
				(element ShipParameter_Number
					_title = 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_GK_IN_SMOKE'
					_value = "_visibilityTTX.visibilityByShip.smoke"
					_valueConfig = "VALUE_CONFIG.KILOMETER_NEGATIVE"
					_zeroValueHidden = true
				)
				(element ShipParameter_Range
					_title = 'IDS_SHIP_PARAM_VISIBILITY_DIST_FROM_DEPTH'
					_valueMin = "_visibilityTTX.visibilityFromDepth.min"
					_valueMax = "_visibilityTTX.visibilityFromDepth.max"
					_valueConfig = "VALUE_CONFIG.KILOMETER_NEGATIVE"
				)
				(element ShipParameter_Number
					_title = 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE'
					_value = "_visibilityTTX.visibilityByPlane.normal"
					_valueConfig = "VALUE_CONFIG.KILOMETER_NEGATIVE"
				)
			)
		)
	)
)

(def element ShipEquipmentOnTeamBattlePageDefault (_selectedAvatarId:number)
	(scope
		(event evSelectAircarrierAmmo)

		(var visualSlotDataCollection:gfx = "$datahub.getCollection(CC.visualSlotData)")
		(var ammoBySelectedAvatar:gfx = "visualSlotDataCollection.getChildByPath('byAvatarId.' + _selectedAvatarId)" (event "visualSlotDataCollection.evChildAdded") (event "visualSlotDataCollection.evChildRemoved"))
		(var ammoList:array = "ammoBySelectedAvatar.items" (event "ammoBySelectedAvatar.evAdded") (event "ammoBySelectedAvatar.evRemoved") (event "ammoBySelectedAvatar.evUpdated"))

		(var consumableCollection:gfx = "$datahub.getCollection(CC.battleConsumable)")
		(var consumableBySelectedAvatar:gfx = "consumableCollection.getChildByPath('byAvatarIdAndSquadronOwner.' + _selectedAvatarId + '_' + DEFAULT_SQUADRON_OWNER_ID)" (event "consumableCollection.evChildAdded") (event "consumableCollection.evChildRemoved"))
		(var consumableList:array = "consumableBySelectedAvatar.items ?: []" (event "consumableBySelectedAvatar.evAdded") (event "consumableBySelectedAvatar.evRemoved") (event "consumableBySelectedAvatar.evUpdated"))
	)

	(element BG_Black)

	(class $Fullsize)

	(block
		(class $Fullsize)
		(style
			(marginLeft = 10px)
			(align = "middle")
		)

		(hblock
			(controller $Repeat renderer='ShipEquipmentOnTeamBattlePageItem'
				(bind count "ammoList.length")
				(args
					_slotEntity = "ammoList[$index]"
				)
			)
		)

		(hblock
			(style (marginTop = 25px))
			(controller $Repeat renderer='ShipEquipmentOnTeamBattlePageItem'
				(bind count "consumableList.length")
				(args
					_slotEntity = "consumableList[$index]"
				)
			)
		)
	)
)

(def element ShipEquipmentOnTeamBattlePageAirCarrier (_selectedAvatarId:number)
	(scope
		(event evSelectAircarrierAmmo)

		(var visualSlotDataCollection:gfx = "$datahub.getCollection(CC.visualSlotData)")
		(var ammoBySelectedAvatar:gfx = "visualSlotDataCollection.getChildByPath('byAvatarId.' + _selectedAvatarId)" (event "visualSlotDataCollection.evChildAdded") (event "visualSlotDataCollection.evChildRemoved"))
		(var ammoList:array = "ammoBySelectedAvatar.items" (event "ammoBySelectedAvatar.evAdded") (event "ammoBySelectedAvatar.evRemoved") (event "ammoBySelectedAvatar.evUpdated"))

		(var selectedSquadronType:str = "ammoList[0].visualSlotData.squadType" (event "ammoBySelectedAvatar.evAdded") (event "ammoBySelectedAvatar.evRemoved") (event "ammoBySelectedAvatar.evUpdated"))
		(bind selectedSquadronType "$event._selectedSquadronType" init=false (event "evSelectAircarrierAmmo"))
		(var selectedSquadronIndex:number = "ammoList[0].visualSlotData.squadId" (event "ammoBySelectedAvatar.evAdded") (event "ammoBySelectedAvatar.evRemoved") (event "ammoBySelectedAvatar.evUpdated"))
		(bind selectedSquadronIndex "$event._selectedSquadronIndex" init=false (event "evSelectAircarrierAmmo"))

		(var selectedSquadronAmmoCollection:gfx = "visualSlotDataCollection.getChildByPath('byAvatarIdAndSquadType.' + _selectedAvatarId + '_' + selectedSquadronType)" (event "visualSlotDataCollection.evChildAdded") (event "visualSlotDataCollection.evChildRemoved"))
		(var squadronAmmoList:array = "selectedSquadronAmmoCollection.items ?: []" (event "selectedSquadronAmmoCollection.evAdded") (event "selectedSquadronAmmoCollection.evRemoved") (event "selectedSquadronAmmoCollection.evUpdated"))

		(var consumableCollection:gfx = "$datahub.getCollection(CC.battleConsumable)")
		(var consumableBySelectedAvatar:gfx = "consumableCollection.getChildByPath('byAvatarIdAndSquadronOwner.' + _selectedAvatarId + '_' + selectedSquadronIndex)" (event "consumableCollection.evChildAdded") (event "consumableCollection.evChildRemoved"))
		(var consumableList:array = "consumableBySelectedAvatar.items ?: []" (event "consumableBySelectedAvatar.evAdded") (event "consumableBySelectedAvatar.evRemoved") (event "consumableBySelectedAvatar.evUpdated"))
	)

	(class $Fullsize)

	(block
		(style
			(width = 100%)
			(height = 92px)
		)

		(element BG_Black)

		(hblock
			(style
				(marginLeft = 10px)
				(marginTop = 20px)
			)
			(controller $Repeat renderer='ShipEquipmentOnTeamBattlePageItemWithTab'
				(bind count "ammoList.length")
				(args
					_isSelected = "selectedSquadronType == ammoList[$index].visualSlotData.squadType"
					_weaponSlotEntity = "ammoList[$index]"
				)
			)
		)
	)

	(element TableDivider)

	(hblock
		(style
			(width = 100%)
			(height = 92px)
		)

		(element BG_Black)

		(macro INNER_PANEL_BACKGROUND)

		(hblock
			(style
				(marginLeft = 10px)
				(marginTop = 12px)
			)
			(hblock
				(controller $Repeat renderer='ShipEquipmentOnTeamBattlePageItem'
					(bind count "squadronAmmoList.length")
					(args
						_slotEntity = "squadronAmmoList[$index]"
					)
				)
			)
			(hblock
				(controller $Repeat renderer='ShipEquipmentOnTeamBattlePageItem'
					(bind count "consumableList.length")
					(args
						_slotEntity = "consumableList[$index]"
					)
				)
			)
		)
	)
)

(def element ShipEquipmentOnTeamBattlePageItemWithTab (_weaponSlotEntity:gfx, _isSelected:bool=false)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var state:number = "	_isSelected	? SC.Ui_styles.BUTTON_STATE.SELECTED :
								mouseDown	? SC.Ui_styles.BUTTON_STATE.DOWN :
								rollOver	? SC.Ui_styles.BUTTON_STATE.OVER
											: SC.Ui_styles.BUTTON_STATE.UP")



		(var lineAlphaDict:dict = "{SC.Ui_styles.BUTTON_STATE.DISABLED	: 0.1,
									SC.Ui_styles.BUTTON_STATE.SELECTED	: 0.8,
									SC.Ui_styles.BUTTON_STATE.DOWN		: 0.3,
									SC.Ui_styles.BUTTON_STATE.OVER		: 0.5,
									SC.Ui_styles.BUTTON_STATE.UP		: 0.2}")

		(var lineAlpha:number = "lineAlphaDict[state]")

		(var isSlotInteractive:bool = "_weaponSlotEntity.visualSlotData.weaponType == SC.Ships.SHIP_WEAPON_TYPES.AIRPLANES")

		(var isTabClickable:bool = "!_isSelected && isSlotInteractive")
		(var soundEventName:str = "isTabClickable ? 'button_tab' : ''")
		(var clickEventName:gfx = "isTabClickable ? 'evSelectAircarrierAmmo' : ''")
	)

	(style (backgroundColor = "0x01000000"))

	(macro MOUSE_EVENTS_DISPATCHER)
	(macro SOUND_HANDLER "soundEventName")

	(dispatch evSelectAircarrierAmmo
		args="{_selectedSquadronType: _weaponSlotEntity.visualSlotData.squadType, _selectedSquadronIndex: _weaponSlotEntity.visualSlotData.squadId}"
		dir="EventDirection.UP"
		(event "evClicked") (bind enabled "isTabClickable")
	)

	(element ShipEquipmentOnTeamBattlePageItem
		_slotEntity = "_weaponSlotEntity"
	)

	
	(block
		(bind visible "isSlotInteractive")
		(style
			(position = "absolute")
			(alpha = "lineAlpha")
			(width = 100%)
			(bottom = -13px)
			(height = 1px)
			(backgroundColor = 0xFFFFFFFF)
		)
		(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA _trigger="state" _alpha="lineAlpha")
	)
)

(def element ShipEquipmentOnTeamBattlePageItem (_slotEntity:gfx)
	(scope
		(event evWeaponItemClicked)

		(var equipmentSlotComponent:gfx = "_slotEntity.visualSlotData ?: _slotEntity.battleConsumable")
		(var iconPath:str = "equipmentSlotComponent.iconPath")
		(var paramsDescriptor:str = "_slotEntity.hasComponent(CC.visualSlotData) ? equipmentSlotComponent.id : ''")

		(var selectedShipInfoEntity:gfx = "$datahub.getSingleEntity(CC.selectedShipInfo)")
		(var shipTTX:gfx = "selectedShipInfoEntity.selectedShipInfo.shipTTX" (event "selectedShipInfoEntity.selectedShipInfo.evChanged"))
		(var isChargeableDrum:bool = "shipTTX.artillery.drumFireMode.isChargeable.value")
		(var isSwitchableDrum:bool = "shipTTX.artillery.drumFireMode.isSwitchable.value")
		(var isShowDrumMode:bool = "shipTTX.artillery.drumFireMode && (isChargeableDrum || !isSwitchableDrum)")
		(var showSlot:bool = "equipmentSlotComponent.id != SC.Ships.SHIP_INFO_WEAPON_TYPE.VALUE_TO_NAME[SC.Ships.SHIP_INFO_WEAPON_TYPE.FIRE_MODE] || isSwitchableDrum")
	)

	(bind visible "showSlot")
	(style
		(marginLeft = 6px)
		(marginRight = 6px)
		(width = 60px)
		(height = 60px)
	)

	(controller $Tooltip
		(renderer = 'ShipEquipmentOnTeamBattlePageItemTooltip')
		(args
			_slotEntity = "_slotEntity"
			_isShowDrumMode = "isShowDrumMode"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundSize = "fill")
			(bind backgroundImage "iconPath")
		)
	)
	(block
		(bind visible "isShowDrumMode && isIn(paramsDescriptor, CAN_DRUM_AMMO)")
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(backgroundSize = "fill")
			(backgroundImage = 'url:../consumables/drumMode_indicator.png')
		)
	)
)

(def element ShipEquipmentOnTeamBattlePageItemTooltip (_slotEntity:gfx, _isShowDrumMode:bool)
	(scope
		(macro SELECTED_AVATAR_ID)
		(var shipTTX:gfx = "selectedShipInfoEntity.selectedShipInfo.shipTTX" (event "selectedShipInfoEntity.selectedShipInfo.evChanged"))

		(var equipmentSlotComponent:gfx = "_slotEntity.visualSlotData ?: _slotEntity.battleConsumable")
		(var paramsDescriptor:str = "_slotEntity.hasComponent(CC.visualSlotData) ? equipmentSlotComponent.id : ''")
		(var title:str = 			"equipmentSlotComponent.title")
		(var subheader:str = 		"equipmentSlotComponent.subheader")
		(var iconPath:str = 		"equipmentSlotComponent.iconPath")

		(var attributesComponent:gfx = "_slotEntity.attributes")
		(var attributesNegative:array = "attributesComponent.negative 	?: []" (event "attributesComponent.evChanged"))
		(var attributesNeutral:array = 	"attributesComponent.neutral	?: []"	(event "attributesComponent.evChanged"))
		(var attributesPositive:array = "attributesComponent.positive 	?: []" (event "attributesComponent.evChanged"))

		(var timeStatisticsEventName:str = "SC.Common.SHIP_INFO_STATISTICS.WEAPON_TTX_TOOLTIP_OPENED + ':' + selectedAvatarId + '_' + equipmentSlotComponent.title")
	)

	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG_START, [timeStatisticsEventName]]" init=false watch=false on='addedToStage')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG_END, [timeStatisticsEventName]]" init=false watch=false on='removedFromStage')


	(style (hitTest = false) (width = 340px))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderWithIconAndText
			_imageUrl =			"iconPath"
			_imageWidth =		60
			_imageHeight =		60
			_headerText =		"title"
			_subheaderText =	"subheader"
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "paramsDescriptor"))
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='AmmoParametersAdapterInBattlePage'
				(bind enabled "paramsDescriptor")
				(args
					_ttxDescriptor = "paramsDescriptor"
					_shipTTX = "shipTTX"
					_avatarId = "selectedAvatarId"
				)
			)
			(controller $Instance renderer = 'WeaponTooltipBurstFire'
				(args _prefix = '_ForBattleTab')
				(bind enabled "_isShowDrumMode && isIn(paramsDescriptor, CAN_DRUM_AMMO)")
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "!paramsDescriptor"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemParamsModifiersList'
				(bind enabled "!paramsDescriptor")
				
				(args
					_attributesPositive =	"attributesPositive"
					_attributesNeutral =	"attributesNeutral"
					_attributesNegative =	"attributesNegative"
				)
			)
		)
	)
)
